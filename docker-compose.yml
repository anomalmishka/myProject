version: '3.3'

services:
  web-app:
    container_name: web-app
    build: ./web-app
    image: ita:web-app
    ports:
      - "8001:8001"
    hostname: web-app
#    restart: on-failure
#    environment:
#      DB_URL: jdbc:postgresql://web_db:5432/dbWeb
#      DB_DRIVER: org.postgresql.Driver
#      DB_USERNAME: postgres
#      DB_PASSWORD: postgres
#      SERVER: http://database-app:8003/data-base-app
#      MAPPING_DATA_BASE_APP: /data-base-app

  data_base-app:
    container_name: database-app
    build: ./data-base-app
    image: ita:data-base-app
    ports:
      - "8003:8003"
    hostname: data-base-app
#    restart: on-failure
  database:
    container_name: web-db
    image: postgres:14 # официальный образ базы данных
    env_file:
      - ./web-db/database.env # данные для создания пользователя, которым вы будете подключаться приложением
    volumes:
      - ./web-db/secure.sql:/docker-entrypoint-initdb.d/secure.sql # путь к скрипту для создания таблиц
      - ./web-db/data:/var/lib/postgresql/data/ # путь к папке для хранения состояния данных
    ports:
      - "5438:5432"
#    restart: always
#    depends_on:
#      - web-db
#      - web-app
#      - database-app

#  docker-compose -f docker-compose.yml up -d --build
#  docker-compose -f docker-compose.yml down            - команда останавливает и удаляет контейнеры.
#  docker-compose -f docker-compose.yml logs -f         - команда для просмотра логов внутри контейнеров.
